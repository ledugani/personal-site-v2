{"version":3,"sources":["components/Navbar/icons/right.svg","app/impossible_cube.png","components/Navbar/icons/home.svg","components/Navbar/icons/contact.svg","components/Navbar/icons/experience.svg","components/Navbar/icons/projects.svg","components/Navbar/icons/blog.svg","components/Blog/Blog.js","components/Contact/Contact.js","components/Experience/Experience.js","components/Home/Home.js","components/Projects/Projects.js","components/Navbar/Navbar.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Blog","className","React","Component","Contact","Experience","Home","Projects","Navbar","href","src","home","alt","right","experience","projects","blog","contact","App","logo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,mC,kBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,wTCc5BC,G,uLARX,OACE,yBAAKC,UAAU,QAAf,Y,GAJaC,IAAMC,YCWVC,G,uLARX,OACE,yBAAKH,UAAU,WAAf,e,GAJgBC,IAAMC,YCWbE,G,uLARX,OACE,yBAAKJ,UAAU,cAAf,kB,GAJmBC,IAAMC,YCWhBG,G,uLARX,OACE,yBAAKL,UAAU,QAAf,Y,GAJaC,IAAMC,YCWVI,G,uLARX,OACE,yBAAKN,UAAU,YAAf,gB,GAJiBC,IAAMC,Y,qGCwDdK,G,uLAhDX,OACE,yBAAKP,UAAU,yBACb,wBAAIA,UAAU,mBACZ,uBAAGQ,KAAK,KACN,wBAAIR,UAAU,oBACZ,yBAAKS,IAAKC,IAAMV,UAAU,cAAcW,IAAI,SAC5C,uBAAGX,UAAU,YAAb,QACA,yBAAKS,IAAKG,IAAOZ,UAAU,0BAA0BW,IAAI,WAI7D,uBAAGH,KAAK,KACN,wBAAIR,UAAU,0BACZ,yBAAKS,IAAKI,IAAYb,UAAU,cAAcW,IAAI,SAClD,yCACA,yBAAKF,IAAKG,IAAOZ,UAAU,0BAA0BW,IAAI,WAI7D,uBAAGH,KAAK,KACN,wBAAIR,UAAU,wBACZ,yBAAKS,IAAKK,IAAUd,UAAU,cAAcW,IAAI,SAChD,uCACA,yBAAKF,IAAKG,IAAOZ,UAAU,0BAA0BW,IAAI,WAI7D,uBAAGH,KAAK,KACN,wBAAIR,UAAU,oBACZ,yBAAKS,IAAKM,IAAMf,UAAU,cAAcW,IAAI,SAC5C,mCACA,yBAAKF,IAAKG,IAAOZ,UAAU,0BAA0BW,IAAI,WAI7D,uBAAGH,KAAK,KACN,wBAAIR,UAAU,uBACZ,yBAAKS,IAAKO,IAAShB,UAAU,cAAcW,IAAI,SAC/C,sCACA,yBAAKF,IAAKG,IAAOZ,UAAU,0BAA0BW,IAAI,iB,GAzClDV,IAAMC,Y,MCwCZe,MArCf,WACE,OACE,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,OAGF,4BAAQA,UAAU,cAChB,yBAAKS,IAAKS,IAAMlB,UAAU,WAAWW,IAAI,SACzC,uBAAGX,UAAU,WAAb,qDAKF,yBAAKA,UAAU,QACb,kBAAC,EAAD,OAGF,yBAAKA,UAAU,cACb,kBAAC,EAAD,OAGF,yBAAKA,UAAU,YACb,kBAAC,EAAD,OAGF,yBAAKA,UAAU,QACb,kBAAC,EAAD,OAGF,yBAAKA,UAAU,WACb,kBAAC,EAAD,SC/BYmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.6a665e9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/right.1150e52e.svg\";","module.exports = __webpack_public_path__ + \"static/media/impossible_cube.6a0994b8.png\";","module.exports = __webpack_public_path__ + \"static/media/home.2756010a.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.eb089f7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/experience.ed6dc39a.svg\";","module.exports = __webpack_public_path__ + \"static/media/projects.1a216ae0.svg\";","module.exports = __webpack_public_path__ + \"static/media/blog.38591e59.svg\";","import React from 'react';\nimport './Blog.css';\n\nclass Blog extends React.Component {\n\n  render () {\n    return (\n      <div className=\"blog\">\n        Blog\n      </div>\n    );\n  }\n};\n\nexport default Blog;\n","import React from 'react';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n\n  render () {\n    return (\n      <div className=\"contact\">\n        Contact\n      </div>\n    );\n  }\n};\n\nexport default Contact;\n","import React from 'react';\nimport './Experience.css';\n\nclass Experience extends React.Component {\n\n  render () {\n    return (\n      <div className=\"experience\">\n        Experience\n      </div>\n    );\n  }\n};\n\nexport default Experience;\n","import React from 'react';\nimport './Home.css';\n\nclass Home extends React.Component {\n\n  render () {\n    return (\n      <div className=\"home\">\n        Home\n      </div>\n    );\n  }\n};\n\nexport default Home;\n","import React from 'react';\nimport './Projects.css';\n\nclass Projects extends React.Component {\n\n  render () {\n    return (\n      <div className=\"projects\">\n        Projects\n      </div>\n    );\n  }\n};\n\nexport default Projects;\n","import React from 'react';\nimport home from './icons/home.svg';\nimport contact from './icons/contact.svg';\nimport experience from './icons/experience.svg';\nimport projects from './icons/projects.svg';\nimport blog from './icons/blog.svg';\nimport right from './icons/right.svg';\nimport './Navbar.css';\n\nclass Navbar extends React.Component {\n  render () {\n    return (\n      <nav className=\"navbar navbar-default\">\n        <ul className=\"navigation-list\">\n          <a href=\"/\">\n            <li className=\"nav-btn nav-home\">\n              <img src={home} className=\"mobile-icon\" alt=\"logo\" />\n              <p className=\"engraved\">Home</p>\n              <img src={right} className=\"mobile-icon right-arrow\" alt=\"logo\" />\n            </li>\n          </a>\n\n          <a href=\"/\">\n            <li className=\"nav-btn nav-experience\">\n              <img src={experience} className=\"mobile-icon\" alt=\"logo\" />\n              <p>Experience</p>\n              <img src={right} className=\"mobile-icon right-arrow\" alt=\"logo\" />\n            </li>\n          </a>\n\n          <a href=\"/\">\n            <li className=\"nav-btn nav-projects\">\n              <img src={projects} className=\"mobile-icon\" alt=\"logo\" />\n              <p>Projects</p>\n              <img src={right} className=\"mobile-icon right-arrow\" alt=\"logo\" />\n            </li>\n          </a>\n\n          <a href=\"/\">\n            <li className=\"nav-btn nav-blog\">\n              <img src={blog} className=\"mobile-icon\" alt=\"logo\" />\n              <p>Blog</p>\n              <img src={right} className=\"mobile-icon right-arrow\" alt=\"logo\" />\n            </li>\n          </a>\n\n          <a href=\"/\">\n            <li className=\"nav-btn nav-contact\">\n              <img src={contact} className=\"mobile-icon\" alt=\"logo\" />\n              <p>Contact</p>\n              <img src={right} className=\"mobile-icon right-arrow\" alt=\"logo\" />\n            </li>\n          </a>\n        </ul>\n      </nav>\n    );\n  }\n};\n\nexport default Navbar;\n","import React from 'react';\nimport logo from './impossible_cube.png';\n\nimport Blog from '../components/Blog/Blog';\nimport Contact from '../components/Contact/Contact';\nimport Experience from '../components/Experience/Experience';\nimport Home from '../components/Home/Home';\nimport Projects from '../components/Projects/Projects';\nimport Navbar from '../components/Navbar/Navbar';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"navigation-menu\">\n        <Navbar />\n      </div>\n\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p className=\"hm-text\">\n          \"The quieter you become, the more you can hear.\"\n        </p>\n      </header>\n\n      <div className=\"home\">\n        <Home />\n      </div>\n\n      <div className=\"experience\">\n        <Experience />\n      </div>\n\n      <div className=\"projects\">\n        <Projects />\n      </div>\n\n      <div className=\"blog\">\n        <Blog />\n      </div>\n\n      <div className=\"contact\">\n        <Contact />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}